# bot/debt_menu_handlers.py - –° –õ–û–ì–ò–†–û–í–ê–ù–ò–ï–ú

import logging
from telegram import Update
from telegram.ext import ContextTypes

from keyboards.main_menu import get_main_menu_keyboard
from keyboards.debt_menu import get_debt_management_keyboard
from .common import show_main_menu
from .debt_handlers import (
    show_debts_menu, 
    show_snowball_plan, 
    show_debt_freedom_progress, 
    show_debt_milestones,
    show_debt_statistics,
    show_debts_main_menu
)

logger = logging.getLogger(__name__)

async def handle_debt_menu_commands(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–ª–≥–∞–º–∏"""
    text = update.message.text
    logger.info(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –¥–æ–ª–≥–æ–≤: {text}")
    
    try:
        if text == 'üìú –ú–æ–∏ –¥–æ–ª–≥–∏':
            logger.info("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–ª–≥–æ–≤")
            await show_debts_menu(update, context)
        elif text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ–ª–≥':
            logger.info("–ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ª–≥–∞")
            from .debt_conversations import start_add_debt_flow
            await start_add_debt_flow(update, context)
        elif text == 'üí≥ –ü–æ–≥–∞—Å–∏—Ç—å –¥–æ–ª–≥':
            logger.info("–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–≥–∞—à–µ–Ω–∏–µ –¥–æ–ª–≥–∞")
            await update.message.reply_text(
                "üí≥ *–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–≥–∞—à–µ–Ω–∏—è –¥–æ–ª–≥–∞...*",
                parse_mode='Markdown',
                reply_markup=get_debt_management_keyboard()
            )
        elif text == 'üìã –ü–ª–∞–Ω –ø–æ–≥–∞—à–µ–Ω–∏—è':
            logger.info("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞–Ω –ø–æ–≥–∞—à–µ–Ω–∏—è")
            await show_snowball_plan(update, context)
        elif text == 'üìà –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–≤–æ–±–æ–¥—ã':
            logger.info("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–≤–æ–±–æ–¥—ã")
            await show_debt_freedom_progress(update, context)
        elif text == 'üéØ –í–µ—Ö–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è':
            logger.info("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Ö–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è")
            await show_debt_milestones(update, context)
        elif text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–ª–≥–æ–≤':
            logger.info("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ–ª–≥–æ–≤")
            await show_debt_statistics(update, context)
        elif text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            logger.info("–í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            await show_main_menu(update, context)
        elif text.lower().startswith('–¥–æ–ª–≥'):
            logger.info("–ë—ã—Å—Ç—Ä—ã–π –≤–≤–æ–¥ –¥–æ–ª–≥–∞")
            from .debt_conversations import quick_debt_input
            await quick_debt_input(update, context)
        else:
            logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–≥–æ–≤: {text}")
            await show_debts_main_menu(update, context)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –¥–æ–ª–≥–æ–≤: {e}")
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=get_debt_management_keyboard()
        )