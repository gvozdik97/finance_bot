# bot/transactions_handlers.py
import logging
from telegram import Update
from telegram.ext import ContextTypes

from services.transaction_service import transaction_service
from keyboards.transactions_menu import get_transactions_menu_keyboard
from keyboards.main_menu import get_main_menu_keyboard

logger = logging.getLogger(__name__)


async def handle_transactions_menu_commands(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"""
    text = update.message.text
    
    if text == 'üí≥ –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥':
        from .conversations import add_income
        return await add_income(update, context)
    elif text == 'üí∏ –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥':
        from .conversations import add_expense
        return await add_expense(update, context)
    elif text == 'üìã –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π':
        await show_transaction_history(update, context)
    elif text == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        from .transaction_editor_handlers import show_edit_menu  # ‚Üê –ò–ó–ú–ï–ù–ï–ù–ò–ï
        await show_edit_menu(update, context)
    elif text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        from .common import show_main_menu
        await show_main_menu(update, context)
    else:
        await update.message.reply_text(
            "‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞",
            reply_markup=get_transactions_menu_keyboard()
        )

async def show_transactions_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏"""
    menu_text = """
üíº *–£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–Ø–ú–ò*

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
‚Ä¢ üí≥ –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥ - –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞
‚Ä¢ üí∏ –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥ - —Å–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤  
‚Ä¢ üìã –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π - –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
‚Ä¢ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É

üí° –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ä–∞–∑—É –æ—Ç—Ä–∞–∂–∞—é—Ç—Å—è –Ω–∞ –±–∞–ª–∞–Ω—Å–∞—Ö
"""
    await update.message.reply_text(
        menu_text,
        parse_mode='Markdown',
        reply_markup=get_transactions_menu_keyboard()
    )

async def show_transaction_history(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"""
    user_id = update.message.from_user.id
    
    try:
        transactions = transaction_service.get_transaction_history(user_id, limit=10)
        
        history_text = "üìã *–ü–û–°–õ–ï–î–ù–ò–ï –û–ü–ï–†–ê–¶–ò–ò*\n\n"
        
        if not transactions:
            history_text += "üì≠ –û–ø–µ—Ä–∞—Ü–∏–π –ø–æ–∫–∞ –Ω–µ—Ç\nüí° –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é!"
        else:
            for i, trans in enumerate(transactions, 1):
                emoji = "üí≥" if trans[0] == 'income' else "üí∏"
                sign = "+" if trans[0] == 'income' else "-"
                history_text += f"{i}. {emoji} {trans[2]}: {sign}{trans[1]:,.0f} —Ä—É–±.\n"
                history_text += f"   üìù {trans[3]}\n"
                history_text += f"   üìÖ {trans[4][:16]}\n\n"
        
        await update.message.reply_text(
            history_text,
            parse_mode='Markdown',
            reply_markup=get_transactions_menu_keyboard()
        )
        
    except Exception as e:
        logger.error(f"Transaction history error: {e}")
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π",
            reply_markup=get_transactions_menu_keyboard()
        )

async def start_edit_transaction(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"""
    # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ - —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ –§–∞–∑–µ 3
    await update.message.reply_text(
        "‚úèÔ∏è *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π*\n\n"
        "üîß –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n"
        "–°–∫–æ—Ä–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏!\n\n"
        "üí° –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª üìã –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞",
        parse_mode='Markdown',
        reply_markup=get_transactions_menu_keyboard()
    )