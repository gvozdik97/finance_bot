# utils/debt_visualizers.py - –ë–ê–ó–û–í–ê–Ø –í–ï–†–°–ò–Ø

import random
from services.debt_service import debt_service

class DebtVisualizer:
    """–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –æ—Ç –¥–æ–ª–≥–æ–≤"""
    
    @staticmethod
    def create_debt_freedom_progress(user_id: int) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –æ—Ç –¥–æ–ª–≥–æ–≤"""
        debts = debt_service.get_active_debts(user_id)
        total_debt = sum(debt.current_amount for debt in debts)
        
        if total_debt == 0:
            return "üéâ *–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —Å–≤–æ–±–æ–¥–Ω—ã –æ—Ç –¥–æ–ª–≥–æ–≤!* üéâ"
        
        initial_debt = sum(debt.initial_amount for debt in debts)
        progress = ((initial_debt - total_debt) / initial_debt * 100) if initial_debt > 0 else 0
        
        progress_bar = "‚ñà" * int(progress / 10) + "‚ñë" * (10 - int(progress / 10))
        
        return f"""
üìà *–ü—Ä–æ–≥—Ä–µ—Å—Å –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –æ—Ç –¥–æ–ª–≥–æ–≤*

{progress_bar} {progress:.1f}%

üí∞ –ù–∞—á–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {initial_debt:,.0f} —Ä—É–±.
üéØ –¢–µ–∫—É—â–∏–π –¥–æ–ª–≥: {total_debt:,.0f} —Ä—É–±.
‚úÖ –ü–æ–≥–∞—à–µ–Ω–æ: {initial_debt - total_debt:,.0f} —Ä—É–±.

üí° *–°–æ–≤–µ—Ç –í–∞–≤–∏–ª–æ–Ω–∞:* ¬´–ö–∞–∂–¥—ã–π –ø–ª–∞—Ç–µ–∂ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –≤–∞—Å –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–±–æ–¥–µ!¬ª
"""
    
    @staticmethod
    def create_debt_milestones(user_id: int) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –ø–æ–≥–∞—à–µ–Ω–∏–∏ –¥–æ–ª–≥–æ–≤"""
        debts = debt_service.get_active_debts(user_id)
        total_debt = sum(debt.current_amount for debt in debts)
        initial_debt = sum(debt.initial_amount for debt in debts)
        
        if total_debt == 0:
            return "üèÜ *–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ø–æ–ª–Ω–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–±–æ–¥—ã!*"
        
        progress = ((initial_debt - total_debt) / initial_debt * 100) if initial_debt > 0 else 0
        
        milestones_text = "üéØ *–í–µ—Ö–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –æ—Ç –¥–æ–ª–≥–æ–≤*\n\n"
        
        milestones = [
            (25, "ü•â –ë—Ä–æ–Ω–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å", "–ü–µ—Ä–≤—ã–π —Å–µ—Ä—å–µ–∑–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å!"),
            (50, "ü•à –°–µ—Ä–µ–±—Ä—è–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å", "–ü–æ–ª–æ–≤–∏–Ω–∞ –ø—É—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–∞!"),
            (75, "ü•á –ó–æ–ª–æ—Ç–æ–π —É—Ä–æ–≤–µ–Ω—å", "–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ!"),
            (100, "üèÜ –ü–æ–ª–Ω–∞—è —Å–≤–æ–±–æ–¥–∞", "–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–±–æ–¥—ã!")
        ]
        
        for threshold, title, description in milestones:
            if progress >= threshold:
                status = "‚úÖ –î–û–°–¢–ò–ì–ù–£–¢–û"
            else:
                status = "‚è≥ –í –ü–†–û–¶–ï–°–°–ï"
            
            milestones_text += f"{title} - {status}\n"
            milestones_text += f"   {description}\n\n"
        
        milestones_text += f"üìä –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {progress:.1f}%"
        
        return milestones_text